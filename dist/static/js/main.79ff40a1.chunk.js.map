{"version":3,"sources":["serviceWorker.js","component/navbar/signinLinks.js","reducers/actions/authAction.js","component/navbar/signoutLink.js","component/navbar/navbar.js","component/dashboard/notification.js","component/project/ProjectSummary.js","component/project/ProjectList.js","component/dashboard/dashboard.js","component/project/ProjectDetails.js","component/auth/Signin.js","component/auth/Signup.js","component/project/CreateProject.js","reducers/actions/projectAction.js","App.js","reducers/authReducer.js","reducers/projectReducer.js","reducers/rootReducer.js","index.js"],"names":["Boolean","window","location","hostname","match","connect","dispatch","signOut","getState","getFirebase","auth","then","type","catch","err","props","className","to","onClick","profile","initial","SignoutLinks","state","firebase","links","uid","isLoaded","Notification","notifications","btnVariant","hidden","opacity","x","visible","transition","delay","notify","map","n","li","key","id","variants","animate","user","content","moment","time","toDate","fromNow","style","marginTop","ProjectSummary","project","title","autherName","createat","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","params","data","div","history","goBack","signIn","creds","credentials","signInWithEmailAndPassword","email","password","useState","inputs","setinputs","handleChange","e","target","value","onSubmit","preventDefault","htmlFor","onChange","authStatus","signUpErr","signUp","newuser","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","firstName","firstname","lastName","lastname","message","create","autherId","add","Date","console","log","createProject","push","exact","path","component","Deshboard","ProjectDetails","Signin","Signup","CreateProject","initState","authReducer","action","projectReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","fbConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","functions","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","useFirestoreForProfile","userProfile","rrfProps","config","createFirestoreInstance","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.79ff40a1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { signOut } from \"../../reducers/actions/authAction\";\nimport { connect } from \"react-redux\";\n\nfunction SigninLinks(props) {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/create\">New Project</NavLink>\n      </li>\n      <li onClick={props.signOut}>\n        <a>Sign out</a>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n          {props.profile.initial}\n        </NavLink>\n      </li>\n    </ul>\n  );\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut()),\n  };\n};\nexport default connect(null, mapDispatchToProps)(SigninLinks);\n","export const signIn=(credentials)=>{\n    return(dispatch,getState,{getFirebase})=>{\n        const firebase=getFirebase();\n         \n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(()=>{\n            \n            dispatch({type:\"LOGIN_SUCCESS\"})\n        }).catch((err)=>{\n            dispatch({type:\"LOGIN_ERR\",err})\n        })\n    }\n}\n\nexport const signOut=()=>{\n    return(dispatch,getState,{getFirebase})=>{\n        const firebase=getFirebase();\n     \n        firebase.auth().signOut().then(()=>{\n            dispatch({type:\"SIGNOUT_SUCCESS\"})\n        }).catch((err)=>{\n           return dispatch({type:\"SIGNOUT_ERR\",err})\n        })\n    }\n}\n\nexport const signUp=(newUser)=>{\n    return(dispatch,getState,{getFirebase,getFirestore})=>{\n        const firebase=getFirebase();\n        const firestore=getFirestore();\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((res)=>{\n            return firestore.collection('users').doc(res.user.uid).set({\n                firstName:newUser.firstname,\n                lastName:newUser.lastname,\n                initial:newUser.firstname[0]+newUser.lastname[0]\n\n            })\n        }).then(()=>dispatch({type:\"SIGNUP_SUCCESS\"})).catch((err)=>{\n            return dispatch({type:\"SIGNUP_ERR\",err})\n        })\n        \n}}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nexport default function SignoutLinks() {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/signup\">Sign up</NavLink></li>\n            <li> <NavLink to=\"/signin\">Sign in</NavLink></li>\n           \n\n        </ul>\n    )\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SigninLinks from \"./signinLinks\";\nimport SignoutLinks from \"./signoutLink\";\nimport { connect } from \"react-redux\";\nfunction Navbar(props) {\n  const links = props.auth.uid ? (\n    <SigninLinks profile={props.profile} />\n  ) : (\n    <SignoutLinks />\n  );\n  return (\n    <nav className=\"nav-wrapper blue darken-3\">\n      <div className=\"container col s12\">\n        <Link to=\"/\" className=\"brand-logo left\">\n          Project Manager\n        </Link>\n      </div>\n      <div className=\"col s12\">{props.auth.isLoaded && links}</div>\n    </nav>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile,\n  };\n};\nexport default connect(mapStateToProps)(Navbar);\n","import React from \"react\";\nimport moment from \"moment\";\nimport { motion } from \"framer-motion\";\nexport default function Notification({ notifications }) {\n  const btnVariant = {\n    hidden: {\n      opacity: 0,\n      x: \"100vw\",\n    },\n    visible: {\n      opacity: 1,\n      x: 0,\n      transition: { delay: 0.5 },\n    },\n  };\n\n  const notify = notifications ? (\n    notifications.map((n) => (\n      <motion.li\n        key={n.id}\n        variants={btnVariant}\n        initial=\"hidden\"\n        animate=\"visible\"\n      >\n        <span className=\"pink-text\">{n.user}</span>&nbsp;&nbsp;\n        <span>{n.content}</span>\n        <div className=\"grey-text\">{moment(n.time.toDate()).fromNow()}</div>\n        <hr />\n      </motion.li>\n    ))\n  ) : (\n    <div style={{ marginTop: 100 }} className=\"container blue-text\">\n      <div className=\"preloader-wrapper small active\">\n        <div className=\"spinner-layer spinner-blue-only\">\n          <div className=\"circle-clipper left\">\n            <div className=\"circle\"></div>\n          </div>\n          <div className=\"gap-patch\">\n            <div className=\"circle\"></div>\n          </div>\n          <div className=\"circle-clipper right\">\n            <div className=\"circle\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notification</span>\n          <ul className=\"notifications\">{notify}</ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nexport default function ProjectSummary({project}) {\n    return (\n       \n        <div className=\" card z-depth-0 project-summary\">\n        <div className=\"card-content grey-text text-darken-3\">\n            \n            <Link to={\"/project/\"+project.id}><span className=\"card-title\">{project.title}</span></Link>\n            <p>posted by the {project.autherName}</p>\n            <p className=\"grey-text\">{moment(project.createat.toDate()).calendar()}</p>\n        </div>\n        <hr></hr>\n    </div>\n       \n    )\n}\n","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\n\nexport default function ProjectList({projects}) {\n    \n    return (\n        <div className=\"project-list section\">\n            \n            {projects&& projects.map(project=><ProjectSummary project={project} key={project.id}/>)}\n            \n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport Notification from './notification';\nimport ProjectList from '../project/ProjectList';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom';\n\nconst mapStateToProps=(state)=>{\n    return{\n        projects:state.firestore.ordered.project,\n        auth:state.firebase.auth,\n        notifications:state.firestore.ordered.notifications\n    }\n}\n\n class Dashboard extends Component {\n    render() {\n        if(!this.props.auth.uid){\n            return(<Redirect to=\"/signin\"/>)\n        }\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={this.props.projects}/>\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notification notifications={this.props.notifications}/>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default compose(connect(mapStateToProps),\n                firestoreConnect([\n                    {collection:'project',orderBy:['createat','desc']},\n                    {collection:'notifications',limit:5,orderBy:['time','desc']}\n                ]))(Dashboard)","import React from \"react\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport moment from \"moment\";\nimport { motion } from \"framer-motion\";\nimport { Link } from \"react-router-dom\";\n\nfunction ProjectDetails(props) {\n  const btnVariant = {\n    hidden: {\n      opacity: 0,\n      x: \"100vw\",\n    },\n    visible: {\n      opacity: 1,\n      x: 0,\n      transition: { delay: 0.5 },\n    },\n  };\n  const backVariant = {\n    hidden: {\n      opacity: 0,\n      x: \"-100vw\",\n    },\n    visible: {\n      opacity: 1,\n      x: 0,\n      transition: { delay: 0.5 },\n    },\n  };\n  const { project } = props;\n\n  if (project && props.auth.uid) {\n    return (\n      <motion.div\n        className=\"container center\"\n        variants={btnVariant}\n        initial=\"hidden\"\n        animate=\"visible\"\n      >\n        <div className=\" card z-depth-0 project-summary\">\n          <div className=\"card-content grey-text text-darken-3\">\n            <motion.div\n              variants={backVariant}\n              onClick={props.history.goBack}\n              initial=\"hidden\"\n              animate=\"visible\"\n              style={{ marginTop: -6 }}\n              className=\"left btn-floating btn-large waves-effect waves-light blue\"\n            >\n              <i className=\"material-icons\">reply</i>\n            </motion.div>\n            <span className=\"card-title\">\n              <h3>{project.title}</h3>\n            </span>\n            <p className=\"\">{project.content}</p>\n            <br />\n            <br />\n            <div className=\"card-action grey lighten-4\">\n              <p>posted by the {project.autherName}</p>\n              <p>{moment(project.createat.toDate()).calendar()}</p>\n            </div>\n          </div>\n        </div>\n      </motion.div>\n    );\n  } else {\n    return (\n      <div className=\"container center progress\">\n        <div className=\"indeterminate blue\"></div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const project = state.firestore.data.project;\n\n  if (project) {\n    return {\n      project: project[id],\n      auth: state.firebase.auth,\n    };\n  } else {\n    return {\n      project: null,\n      auth: state.firebase.auth,\n    };\n  }\n};\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"project\" }])\n)(ProjectDetails);\n","import React,{useState} from 'react'\nimport { connect } from 'react-redux';\nimport {signIn} from '../../reducers/actions/authAction'\nimport { Redirect } from 'react-router-dom';\nfunction Signin(props) {\n    const [inputs, setinputs] = useState({\n        email:\"\",\n        password:\"\"\n    })\n    \n    const handleChange=(e)=>{\n        \n        setinputs({...inputs,\n            [e.target.id]:e.target.value\n        })\n    };\n    const handleSubmit=(e)=>{\n        e.preventDefault();\n        props.signIn(inputs);\n        \n    };\n    if(props.state.firebase.auth.uid){\n        return <Redirect to=\"/\"></Redirect>\n    }\n    return (\n        <div className=\"container\">\n            <br/><br/>\n            <h5 className=\"grey-text text-darken-3 text-bold\">Sign In</h5>\n            <br/>\n            <form onSubmit={handleSubmit} className=\"white\">\n                <div className=\"input-field\">\n                    <label className=\"\"  htmlFor=\"email\">Email</label>\n                    <input id=\"email\" type=\"email\" onChange={handleChange}></input>\n                </div>\n                <br/>\n                <div className=\"input-field\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input id=\"password\" type=\"password\" onChange={handleChange}></input>\n                </div>\n                <br/>\n                <div className=\"input-field\">\n                    <button className=\"btn pink lighten-1 z-depth-0\" type=\"submit\">Sign In</button>\n                </div>\n        {props.state.auth.authStatus&&(<div className=\"red-text center\">Login Failed</div>)}\n            </form>\n        </div>\n    )\n}\nconst mapDispatchToProps=(dispatch)=>{\nreturn{\n    signIn:(creds)=>dispatch(signIn(creds))\n    }\n};\nconst mapStateToProps=(state)=>{\n   \n    return{\n        state\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(Signin)\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { signUp } from \"../../reducers/actions/authAction\";\nfunction Signup(props) {\n  const [inputs, setinputs] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const handleChange = (e) => {\n    setinputs({ ...inputs, [e.target.id]: e.target.value });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.signUp(inputs);\n  };\n  if (props.auth.uid) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"container\">\n      <br />\n      <br />\n      <h4 className=\"grey-text text-darken-3 text-bold\">Sign Up</h4>\n      <br />\n      {props.signUpErr ? (\n        <div className=\"red-text center\">{props.signUpErr.message}</div>\n      ) : null}\n      <form onSubmit={handleSubmit}>\n        <div className=\"input-field\">\n          <label className=\"\" htmlFor=\"firstname\">\n            First Name\n          </label>\n          <input id=\"firstname\" type=\"text\" onChange={handleChange}></input>\n        </div>\n        <br />\n        <div className=\"input-field\">\n          <label className=\"\" htmlFor=\"lastname\">\n            Last Name\n          </label>\n          <input id=\"lastname\" type=\"text\" onChange={handleChange}></input>\n        </div>\n        <br />\n        <div className=\"input-field\">\n          <label className=\"\" htmlFor=\"email\">\n            Email\n          </label>\n          <input id=\"email\" type=\"email\" onChange={handleChange}></input>\n        </div>\n        <br />\n        <div className=\"input-field\">\n          <label htmlFor=\"password\">Password</label>\n          <input id=\"password\" type=\"password\" onChange={handleChange}></input>\n        </div>\n        <br />\n        <div className=\"input-field\">\n          <button className=\"btn pink lighten-1 z-depth-0\" type=\"submit\">\n            Sign Up\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    signUpErr: state.auth.authStatus,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (newuser) => dispatch(signUp(newuser)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\n","import React,{useState} from 'react'\nimport { connect } from 'react-redux';\nimport { createProject } from '../../reducers/actions/projectAction';\nimport { Redirect } from 'react-router-dom';\n\nfunction CreateProject(props) {\n    const [inputs, setinputs] = useState({\n        title:\"\",\n        content:\"\"\n    })\n    const handleChange=(e)=>{\n        \n        setinputs({...inputs,\n            [e.target.id]:e.target.value\n        })\n    };\n    const handleSubmit=(e)=>{\n        e.preventDefault();\n        props.create(inputs);\n        props.history.push(\"/\");\n    };\n    if(!props.auth.uid){\n        return(<Redirect to=\"/signin\"/>)\n    }\n    \n    return (\n        <div className=\"container\">\n            <br/><br/>\n            <h5 className=\"grey-text text-darken-3 text-bold\">Create Project</h5>\n            <br/>\n            <form onSubmit={handleSubmit} className=\"white\">\n                <div className=\"input-field\">\n                    <label className=\"\"  htmlFor=\"title\">Title</label>\n                    <input id=\"title\" type=\"text\" onChange={handleChange}></input>\n                </div>\n                <br/>\n                <div className=\"input-field\">\n                    <label htmlFor=\"content\">Project Content</label>\n                    <textarea  className=\"materialize-textarea\" id=\"content\"  onChange={handleChange}></textarea>\n                </div>\n                <br/>\n                <div className=\"input-field\">\n                    <button className=\"btn pink lighten-1 z-depth-0\" type=\"submit\">Create</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n    const mapToProps=(dispatch)=>{\n        return{\n            create:(project)=>dispatch(createProject(project))\n        }\n    }\n\n    const mapStateToProps=(state)=>{\n        return{\n            auth:state.firebase.auth\n        }\n    }\nexport default connect(mapStateToProps,mapToProps) (CreateProject);\n","export const createProject=(project)=>{\n    return(dispatch,getState,{getFirebase,getFirestore})=>{\n        //make a call to database\n        const autherName=getState().firebase.profile.firstName;\n        const autherId=getState().firebase.auth.uid;\n        const firestore=getFirestore();\n        firestore.collection('project').add({\n            autherName:autherName,\n            autherId:autherId,            \n            title:project.title,\n            content:project.content,\n            createat:new Date(),\n        }).then(()=>{dispatch({type:\"CREATE_PROJECT\",project})\n                }).catch((err)=>{\n                    console.log(\"error\")\n                    })\n       \n        \n    }\n}","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./component/navbar/navbar\";\nimport Deshboard from \"./component/dashboard/dashboard\";\nimport ProjectDetails from \"./component/project/ProjectDetails\";\nimport Signin from \"./component/auth/Signin\";\nimport Signup from \"./component/auth/Signup\";\nimport CreateProject from \"./component/project/CreateProject\";\nimport { connect } from \"react-redux\";\n\nfunction App(props) {\n  if (props.isLoaded) {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Deshboard}></Route>\n            <Route path=\"/project/:id\" component={ProjectDetails}></Route>\n            <Route path=\"/signin\" component={Signin} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  } else {\n    return (\n      <div style={{ marginTop: 100 }} className=\"container blue-text center\">\n        <div className=\"progress\">\n          <div className=\"indeterminate blue\"></div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    isLoaded: state.firebase.auth.isLoaded,\n  };\n};\nexport default connect(mapStateToProps)(App);\n","const initState={\n    authStatus:null\n};\nconst authReducer=(state=initState,action)=>{\n    switch(action.type)\n    {\n        case \"LOGIN_SUCCESS\":\n            \n            return {\n                ...state,\n                authStatus:null\n            }\n        case \"LOGIN_ERR\":\n            \n            return{\n                ...state,\n                authStatus:\"Login Failed\"\n            }\n        case \"SIGNOUT_SUCCESS\":\n            console.log(\"signOut\")\n            return state;\n        case \"SIGNOUT_ERR\":\n            console.log(\"signOut error\",action.err);\n            return state;\n        case \"SIGNUP_SUCCESS\":\n            return{\n                ...state,\n                authStatus:null\n            }\n        case \"SIGNUP_ERR\":\n            return{\n                ...state,\n                authStatus:action.err\n            }\n        default:\n            return state;\n    }\n    \n}\nexport default authReducer;","const initState={\n    projects:[\n        {id:1,title:\"i am project\",content:\"blan blan blan\"},\n        {id:2,title:\"i am project\",content:\"blan blan blan\"},\n        {id:3,title:\"i am project\",content:\"blan blan blan\"}\n    ]\n};\nconst projectReducer=(state=initState,action)=>{\n    switch (action.type){\n        case \"CREATE_PROJECT\":\n            return state;\n        \n        case \"CREATE_PROJECT_ERR\":\n            \n            return state;\n        default:\n            return state        \n    }\n    \n}\nexport default projectReducer;","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport projectReducer from \"./projectReducer\";\nimport {firebaseReducer } from 'react-redux-firebase'\nimport {firestoreReducer } from 'redux-firestore' // <- needed if using firestore\n\n\nconst rootReducer=combineReducers({\n    auth:authReducer,\n    project:projectReducer,\n    firebase: firebaseReducer,\n    firestore: firestoreReducer \n    \n});\nexport default rootReducer;\n// Add firebase to reducers\n// const rootReducer = combineReducers({\n//   firebase: firebaseReducer,\n// firestore: firestoreReducer // <- needed if using firestore\n// })","import React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\"; // <- needed if using firestore\nimport \"firebase/functions\"; // <- needed if using httpsCallable\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport {\n  createFirestoreInstance,\n  getFirestore,\n  reduxFirestore,\n} from \"redux-firestore\"; // <- needed if using firestore\nimport App from \"./App\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\n\nconst fbConfig = {\n  apiKey: \"AIzaSyC3mVmh5beBRxC1NwZTWSVjN9EmGCYtg6Y\",\n  authDomain: \"project-manager-in-reactjs.firebaseapp.com\",\n  databaseURL: \"https://project-manager-in-reactjs.firebaseio.com\",\n  projectId: \"project-manager-in-reactjs\",\n  storageBucket: \"project-manager-in-reactjs.appspot.com\",\n  messagingSenderId: \"427352758321\",\n  appId: \"1:427352758321:web:218ce9483a84e5292e5d10\",\n  measurementId: \"G-PX90GHV7G2\",\n};\n\n//react-redux-firebase config\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n};\n\n// Initialize firebase instance\nfirebase.initializeApp(fbConfig);\n\n// Initialize other services on firebase instance\nfirebase.firestore(); // <- needed if using firestore\nfirebase.functions(); // <- needed if using httpsCallable\n\n// Add firebase to reducers\n// const rootReducer = combineReducers({\n//   firebase: firebaseReducer,\n// firestore: firestoreReducer // <- needed if using firestore\n// })\n\n// Create store with reducers and initial state\nconst initialState = {};\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase, fbConfig, {\n      useFirestoreForProfile: true,\n      userProfile: \"users\",\n    })\n  )\n);\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance, // <- needed if using firestore\n};\n\n// Setup react-redux so that connect HOC can be used\n\nrender(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}