{"version":3,"sources":["img/mario-bg.png","component/navbar/signinLinks.js","reducers/actions/authAction.js","component/navbar/signoutLink.js","component/navbar/navbar.js","component/dashboard/notification.js","component/project/ProjectSummary.js","component/project/ProjectList.js","component/dashboard/dashboard.js","component/project/ProjectDetails.js","component/auth/Signin.js","component/auth/Signup.js","component/project/CreateProject.js","reducers/actions/projectAction.js","App.js","reducers/authReducer.js","reducers/projectReducer.js","reducers/rootReducer.js","index.js"],"names":["module","exports","connect","dispatch","signOut","getState","getFirebase","auth","then","type","catch","err","props","className","to","onClick","profile","initial","SignoutLinks","state","firebase","links","uid","isLoaded","Notification","notifications","notify","map","n","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","autherName","createat","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","signIn","creds","credentials","signInWithEmailAndPassword","email","password","useState","inputs","setinputs","handleChange","e","target","value","onSubmit","preventDefault","htmlFor","onChange","authStatus","signUpErr","signUp","newuser","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","firstName","firstname","lastName","lastname","message","create","autherId","add","Date","console","log","createProject","history","push","exact","path","component","Deshboard","ProjectDetails","Signin","Signup","CreateProject","initState","authReducer","action","projectReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","fbConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","functions","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","useFirestoreForProfile","userProfile","rrfProps","config","createFirestoreInstance","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8218b89.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mario-bg.0ab14f44.png\";","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { signOut } from '../../reducers/actions/authAction'\nimport { connect } from 'react-redux'\n\nfunction SigninLinks(props) {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\n            <li onClick={props.signOut}><a>Sign out</a></li>\n    <li ><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initial}</NavLink></li>\n           \n\n        </ul>\n    )\n}\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        signOut:()=>dispatch(signOut())\n    }\n}\nexport default connect(null,mapDispatchToProps)(SigninLinks)","export const signIn=(credentials)=>{\n    return(dispatch,getState,{getFirebase})=>{\n        const firebase=getFirebase();\n         \n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(()=>{\n            \n            dispatch({type:\"LOGIN_SUCCESS\"})\n        }).catch((err)=>{\n            dispatch({type:\"LOGIN_ERR\",err})\n        })\n    }\n}\n\nexport const signOut=()=>{\n    return(dispatch,getState,{getFirebase})=>{\n        const firebase=getFirebase();\n     \n        firebase.auth().signOut().then(()=>{\n            dispatch({type:\"SIGNOUT_SUCCESS\"})\n        }).catch((err)=>{\n           return dispatch({type:\"SIGNOUT_ERR\",err})\n        })\n    }\n}\n\nexport const signUp=(newUser)=>{\n    return(dispatch,getState,{getFirebase,getFirestore})=>{\n        const firebase=getFirebase();\n        const firestore=getFirestore();\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((res)=>{\n            return firestore.collection('users').doc(res.user.uid).set({\n                firstName:newUser.firstname,\n                lastName:newUser.lastname,\n                initial:newUser.firstname[0]+newUser.lastname[0]\n\n            })\n        }).then(()=>dispatch({type:\"SIGNUP_SUCCESS\"})).catch((err)=>{\n            return dispatch({type:\"SIGNUP_ERR\",err})\n        })\n        \n}}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nexport default function SignoutLinks() {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/signup\">Sign up</NavLink></li>\n            <li> <NavLink to=\"/signin\">Sign in</NavLink></li>\n           \n\n        </ul>\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SigninLinks from './signinLinks'\nimport SignoutLinks from './signoutLink'\nimport { connect } from 'react-redux'\n\nfunction Navbar(props) {\n    const links=props.auth.uid?<SigninLinks profile={props.profile}/>:<SignoutLinks/>\n    return (\n    <nav className=\"nav-wrapper grey darken-3\">\n        <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo left\">Project Manager</Link>\n        </div>\n        {props.auth.isLoaded && links}\n    </nav>\n    )\n}\nconst mapStateToProps=(state)=>{\n    \n    return{\n        auth:state.firebase.auth,\n        profile:state.firebase.profile\n    }\n}\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment from 'moment';\n\nexport default function Notification({notifications}) {\n    \nconst notify=notifications?notifications.map(n=><li key={n.id}>\n    <span className=\"pink-text\">{n.user}</span>&nbsp;&nbsp;\n    <span>{n.content}</span>\n    <div className=\"grey-text\">{moment(n.time.toDate()).fromNow()}</div><hr/>\n    </li>)\n:(<p className=\"container blue-text\">Loading...</p>);\n    return (\n      <div className=\"section\">\n          <div className=\"card z-depth-0\">\n            <div className=\"card-content\">\n                <span className=\"card-title\">Notification</span>\n                <ul className=\"notifications\">\n                    {notify}\n                </ul>\n            </div>\n          </div>\n      </div>\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nexport default function ProjectSummary({project}) {\n    return (\n       \n        <div className=\" card z-depth-0 project-summary\">\n        <div className=\"card-content grey-text text-darken-3\">\n            \n            <Link to={\"/project/\"+project.id}><span className=\"card-title\">{project.title}</span></Link>\n            <p>posted by the {project.autherName}</p>\n            <p className=\"grey-text\">{moment(project.createat.toDate()).calendar()}</p>\n        </div>\n        <hr></hr>\n    </div>\n       \n    )\n}\n","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\n\nexport default function ProjectList({projects}) {\n    \n    return (\n        <div className=\"project-list section\">\n            \n            {projects&& projects.map(project=><ProjectSummary project={project} key={project.id}/>)}\n            \n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport Notification from './notification';\nimport ProjectList from '../project/ProjectList';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom';\n\nconst mapStateToProps=(state)=>{\n    return{\n        projects:state.firestore.ordered.project,\n        auth:state.firebase.auth,\n        notifications:state.firestore.ordered.notifications\n    }\n}\n\n class Dashboard extends Component {\n    render() {\n        if(!this.props.auth.uid){\n            return(<Redirect to=\"/signin\"/>)\n        }\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={this.props.projects}/>\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notification notifications={this.props.notifications}/>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default compose(connect(mapStateToProps),\n                firestoreConnect([\n                    {collection:'project',orderBy:['createat','desc']},\n                    {collection:'notifications',limit:5,orderBy:['time','desc']}\n                ]))(Dashboard)","import React from 'react'\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport moment from 'moment';\n\n\nfunction ProjectDetails(props) {\n    const {project}=props;\n    \n    \n    if(project&&props.auth.uid){\n       \n        return (\n            <div className=\"container center\">\n            <div className=\" card z-depth-0 project-summary\">\n                <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\"><h3>{project.title}</h3></span>\n        <p className=\"\">{project.content}</p><br/><br/>\n                            <div className=\"card-action grey lighten-4\">\n                            <p>posted by the {project.autherName}</p>\n                            <p>{moment(project.createat.toDate()).calendar()}</p>\n                            </div>\n                </div>\n            </div>\n           </div>\n        )\n    }else{\n        return(\n            <h3 className=\"container center\">loading</h3>\n        )\n    }\n    \n}\nconst mapStateToProps=(state,ownProps)=>{\n    const id=ownProps.match.params.id\n    const project=state.firestore.data.project\n    \n    if(project){\n        \n    return{\n        project:project[id],\n        auth:state.firebase.auth\n        }\n    }else{\n        return{\n            project:null,\n            auth:state.firebase.auth\n            \n            }\n    }\n};\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([{collection:'project'}])\n) (ProjectDetails)\n","import React,{useState} from 'react'\nimport { connect } from 'react-redux';\nimport {signIn} from '../../reducers/actions/authAction'\nimport { Redirect } from 'react-router-dom';\nfunction Signin(props) {\n    const [inputs, setinputs] = useState({\n        email:\"\",\n        password:\"\"\n    })\n    \n    const handleChange=(e)=>{\n        \n        setinputs({...inputs,\n            [e.target.id]:e.target.value\n        })\n    };\n    const handleSubmit=(e)=>{\n        e.preventDefault();\n        props.signIn(inputs);\n        \n    };\n    if(props.state.firebase.auth.uid){\n        return <Redirect to=\"/\"></Redirect>\n    }\n    return (\n        <div className=\"container\">\n            <br/><br/>\n            <h5 className=\"grey-text text-darken-3 text-bold\">Sign In</h5>\n            <br/>\n            <form onSubmit={handleSubmit} className=\"white\">\n                <div className=\"input-field\">\n                    <label className=\"\"  htmlFor=\"email\">Email</label>\n                    <input id=\"email\" type=\"email\" onChange={handleChange}></input>\n                </div>\n                <br/>\n                <div className=\"input-field\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input id=\"password\" type=\"password\" onChange={handleChange}></input>\n                </div>\n                <br/>\n                <div className=\"input-field\">\n                    <button className=\"btn pink lighten-1 z-depth-0\" type=\"submit\">Sign In</button>\n                </div>\n        {props.state.auth.authStatus&&(<div className=\"red-text center\">Login Failed</div>)}\n            </form>\n        </div>\n    )\n}\nconst mapDispatchToProps=(dispatch)=>{\nreturn{\n    signIn:(creds)=>dispatch(signIn(creds))\n    }\n};\nconst mapStateToProps=(state)=>{\n   \n    return{\n        state\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(Signin)\n","import React,{useState} from 'react'\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport {signUp} from '../../reducers/actions/authAction'\nfunction Signup(props) {\n    \n    const [inputs, setinputs] = useState({\n        firstname:\"\",\n        lastname:\"\",\n        email:\"\",\n        password:\"\"\n        \n    })\n    const handleChange=(e)=>{\n        \n        setinputs({...inputs,\n            [e.target.id]:e.target.value\n        })\n    };\n    const handleSubmit=(e)=>{\n        e.preventDefault();\n        props.signUp(inputs);\n    };\n    if(props.auth.uid){\n       return <Redirect to=\"/\" />\n    }\n    \n    return (\n        <div className=\"container\">\n            <br/><br/>\n            <h4 className=\"grey-text text-darken-3 text-bold\">Sign Up</h4>\n            <br/>\n    {props.signUpErr?<div className=\"red-text center\">{props.signUpErr.message}</div>:null}\n            <form onSubmit={handleSubmit}>\n            <div className=\"input-field\">\n                    <label className=\"\"  htmlFor=\"firstname\">First Name</label>\n                    <input id=\"firstname\" type=\"text\" onChange={handleChange}></input>\n                </div>\n                <br/>\n                <div className=\"input-field\">\n                    <label className=\"\"  htmlFor=\"lastname\">Last Name</label>\n                    <input id=\"lastname\" type=\"text\" onChange={handleChange}></input>\n                </div>\n                <br/>\n                <div className=\"input-field\">\n                    <label className=\"\"  htmlFor=\"email\">Email</label>\n                    <input id=\"email\" type=\"email\" onChange={handleChange}></input>\n                </div>\n                <br/>\n                <div className=\"input-field\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input id=\"password\" type=\"password\" onChange={handleChange}></input>\n                </div>\n                <br/>\n                <div className=\"input-field\">\n                    <button className=\"btn pink lighten-1 z-depth-0\" type=\"submit\">Sign Up</button>\n                </div>\n            </form>\n        </div>\n    )\n}\nconst mapStateToProps=(state)=>{\n    return{\n        auth:state.firebase.auth,\n        signUpErr:state.auth.authStatus\n    }\n}\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        signUp:(newuser)=>dispatch(signUp(newuser))\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps) (Signup)\n","import React,{useState} from 'react'\nimport { connect } from 'react-redux';\nimport { createProject } from '../../reducers/actions/projectAction';\nimport { Redirect } from 'react-router-dom';\n\nfunction CreateProject(props) {\n    const [inputs, setinputs] = useState({\n        title:\"\",\n        content:\"\"\n    })\n    const handleChange=(e)=>{\n        \n        setinputs({...inputs,\n            [e.target.id]:e.target.value\n        })\n    };\n    const handleSubmit=(e)=>{\n        e.preventDefault();\n        props.create(inputs);\n        props.history.push(\"/\");\n    };\n    if(!props.auth.uid){\n        return(<Redirect to=\"/signin\"/>)\n    }\n    \n    return (\n        <div className=\"container\">\n            <br/><br/>\n            <h5 className=\"grey-text text-darken-3 text-bold\">Create Project</h5>\n            <br/>\n            <form onSubmit={handleSubmit} className=\"white\">\n                <div className=\"input-field\">\n                    <label className=\"\"  htmlFor=\"title\">Title</label>\n                    <input id=\"title\" type=\"text\" onChange={handleChange}></input>\n                </div>\n                <br/>\n                <div className=\"input-field\">\n                    <label htmlFor=\"content\">Project Content</label>\n                    <textarea  className=\"materialize-textarea\" id=\"content\"  onChange={handleChange}></textarea>\n                </div>\n                <br/>\n                <div className=\"input-field\">\n                    <button className=\"btn pink lighten-1 z-depth-0\" type=\"submit\">Create</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n    const mapToProps=(dispatch)=>{\n        return{\n            create:(project)=>dispatch(createProject(project))\n        }\n    }\n\n    const mapStateToProps=(state)=>{\n        return{\n            auth:state.firebase.auth\n        }\n    }\nexport default connect(mapStateToProps,mapToProps) (CreateProject);\n","export const createProject=(project)=>{\n    return(dispatch,getState,{getFirebase,getFirestore})=>{\n        //make a call to database\n        const autherName=getState().firebase.profile.firstName;\n        const autherId=getState().firebase.auth.uid;\n        const firestore=getFirestore();\n        firestore.collection('project').add({\n            autherName:autherName,\n            autherId:autherId,            \n            title:project.title,\n            content:project.content,\n            createat:new Date(),\n        }).then(()=>{dispatch({type:\"CREATE_PROJECT\",project})\n                }).catch((err)=>{\n                    console.log(\"error\")\n                    })\n       \n        \n    }\n}","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './component/navbar/navbar';\nimport Deshboard from './component/dashboard/dashboard'\nimport ProjectDetails from './component/project/ProjectDetails';\nimport Signin from './component/auth/Signin';\nimport Signup from './component/auth/Signup';\nimport CreateProject from './component/project/CreateProject';\nimport { connect } from 'react-redux';\nimport bg from './img/mario-bg.png';\nfunction App(props) {\n  if(props.isLoaded){\n    return (\n      <BrowserRouter>\n      <div className=\"App\" >\n      <Navbar/>\n      <Switch>\n        <Route exact path=\"/\" component={Deshboard}></Route>\n        <Route path=\"/project/:id\" component={ProjectDetails}></Route>\n        <Route path=\"/signin\" component={Signin}/>\n        <Route path=\"/signup\" component={Signup}/>\n        <Route path=\"/create\" component={CreateProject}/>\n      </Switch>\n      \n      </div>\n      </BrowserRouter>\n    );\n  }else{\n    return(<div>\n      <p className=\"container blue-text center\">Loading...</p>\n    </div>)\n  }\n  \n}\nconst mapStateToProps=(state)=>{\n  return{\n    isLoaded:state.firebase.auth.isLoaded\n  }\n}\nexport default connect(mapStateToProps)(App);\n","const initState={\n    authStatus:null\n};\nconst authReducer=(state=initState,action)=>{\n    switch(action.type)\n    {\n        case \"LOGIN_SUCCESS\":\n            \n            return {\n                ...state,\n                authStatus:null\n            }\n        case \"LOGIN_ERR\":\n            \n            return{\n                ...state,\n                authStatus:\"Login Failed\"\n            }\n        case \"SIGNOUT_SUCCESS\":\n            console.log(\"signOut\")\n            return state;\n        case \"SIGNOUT_ERR\":\n            console.log(\"signOut error\",action.err);\n            return state;\n        case \"SIGNUP_SUCCESS\":\n            return{\n                ...state,\n                authStatus:null\n            }\n        case \"SIGNUP_ERR\":\n            return{\n                ...state,\n                authStatus:action.err\n            }\n        default:\n            return state;\n    }\n    \n}\nexport default authReducer;","const initState={\n    projects:[\n        {id:1,title:\"i am project\",content:\"blan blan blan\"},\n        {id:2,title:\"i am project\",content:\"blan blan blan\"},\n        {id:3,title:\"i am project\",content:\"blan blan blan\"}\n    ]\n};\nconst projectReducer=(state=initState,action)=>{\n    switch (action.type){\n        case \"CREATE_PROJECT\":\n            return state;\n        \n        case \"CREATE_PROJECT_ERR\":\n            \n            return state;\n        default:\n            return state        \n    }\n    \n}\nexport default projectReducer;","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport projectReducer from \"./projectReducer\";\nimport {firebaseReducer } from 'react-redux-firebase'\nimport {firestoreReducer } from 'redux-firestore' // <- needed if using firestore\n\n\nconst rootReducer=combineReducers({\n    auth:authReducer,\n    project:projectReducer,\n    firebase: firebaseReducer,\n    firestore: firestoreReducer \n    \n});\nexport default rootReducer;\n// Add firebase to reducers\n// const rootReducer = combineReducers({\n//   firebase: firebaseReducer,\n// firestore: firestoreReducer // <- needed if using firestore\n// })","import React from 'react'\nimport { render } from 'react-dom'\nimport './index.css';\nimport { Provider } from 'react-redux'\nimport firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore' // <- needed if using firestore\nimport 'firebase/functions' // <- needed if using httpsCallable\nimport { createStore, compose, applyMiddleware } from 'redux'\nimport { ReactReduxFirebaseProvider,getFirebase} from 'react-redux-firebase'\nimport { createFirestoreInstance,getFirestore, reduxFirestore } from 'redux-firestore' // <- needed if using firestore\nimport App from './App'\nimport rootReducer from './reducers/rootReducer'\nimport thunk from 'redux-thunk'\n\nconst fbConfig = {\n    apiKey: \"AIzaSyC3mVmh5beBRxC1NwZTWSVjN9EmGCYtg6Y\",\n    authDomain: \"project-manager-in-reactjs.firebaseapp.com\",\n    databaseURL: \"https://project-manager-in-reactjs.firebaseio.com\",\n    projectId: \"project-manager-in-reactjs\",\n    storageBucket: \"project-manager-in-reactjs.appspot.com\",\n    messagingSenderId: \"427352758321\",\n    appId: \"1:427352758321:web:218ce9483a84e5292e5d10\",\n    measurementId: \"G-PX90GHV7G2\"\n};\n\n//react-redux-firebase config\nconst rrfConfig = {\n  userProfile: 'users',\n    useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n}\n\n// Initialize firebase instance\nfirebase.initializeApp(fbConfig)\n\n// Initialize other services on firebase instance\n firebase.firestore() // <- needed if using firestore\n firebase.functions() // <- needed if using httpsCallable\n\n// Add firebase to reducers\n// const rootReducer = combineReducers({\n//   firebase: firebaseReducer,\n// firestore: firestoreReducer // <- needed if using firestore\n// })\n\n// Create store with reducers and initial state\nconst initialState = {}\nconst store = createStore(rootReducer, initialState,compose(\n  applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\n  reduxFirestore(firebase,fbConfig,{useFirestoreForProfile:true,userProfile:\"users\"}),\n \n));\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n   createFirestoreInstance // <- needed if using firestore\n}\n\n// Setup react-redux so that connect HOC can be used\n\nrender(  <Provider store={store}>\n  <ReactReduxFirebaseProvider {...rrfProps}>\n    <App/>\n  </ReactReduxFirebaseProvider>\n</Provider>, document.getElementById('root'))\n\n\n\n"],"sourceRoot":""}